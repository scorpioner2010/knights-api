// <auto-generated />
using System;
using KnightsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KnightsApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251014115641_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KnightsApi.Models.Culture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Cultures");
                });

            modelBuilder.Entity("KnightsApi.Models.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("KnightsApi.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Map")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("KnightsApi.Models.MatchParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<int>("Kills")
                        .HasColumnType("integer");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.Property<int>("MmrDelta")
                        .HasColumnType("integer");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Team")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WarriorId")
                        .HasColumnType("integer");

                    b.Property<int>("XpEarned")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("UserId");

                    b.HasIndex("WarriorId");

                    b.ToTable("MatchParticipants");
                });

            modelBuilder.Entity("KnightsApi.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Coins")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FreeXp")
                        .HasColumnType("integer");

                    b.Property<int>("Gold")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<int>("Mmr")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("KnightsApi.Models.UserWarrior", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WarriorId")
                        .HasColumnType("integer");

                    b.Property<int>("Xp")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("WarriorId");

                    b.HasIndex("UserId", "IsActive")
                        .IsUnique()
                        .HasFilter("\"IsActive\" = TRUE");

                    b.HasIndex("UserId", "WarriorId")
                        .IsUnique();

                    b.ToTable("UserWarriors");
                });

            modelBuilder.Entity("KnightsApi.Models.Warrior", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Acceleration")
                        .HasColumnType("real");

                    b.Property<float>("Accuracy")
                        .HasColumnType("real");

                    b.Property<int>("Armor")
                        .HasColumnType("integer");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CultureId")
                        .HasColumnType("integer");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<int>("HP")
                        .HasColumnType("integer");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PurchaseCost")
                        .HasColumnType("integer");

                    b.Property<float>("Speed")
                        .HasColumnType("real");

                    b.Property<float>("TraverseSpeed")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CultureId");

                    b.ToTable("Warriors");
                });

            modelBuilder.Entity("KnightsApi.Models.WarriorResearchRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PredecessorWarriorId")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredXpOnPredecessor")
                        .HasColumnType("integer");

                    b.Property<int>("SuccessorWarriorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SuccessorWarriorId");

                    b.HasIndex("PredecessorWarriorId", "SuccessorWarriorId")
                        .IsUnique();

                    b.ToTable("WarriorResearchRequirements");
                });

            modelBuilder.Entity("KnightsApi.Models.MatchParticipant", b =>
                {
                    b.HasOne("KnightsApi.Models.Match", "Match")
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KnightsApi.Models.Player", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KnightsApi.Models.Warrior", "Warrior")
                        .WithMany()
                        .HasForeignKey("WarriorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("User");

                    b.Navigation("Warrior");
                });

            modelBuilder.Entity("KnightsApi.Models.UserWarrior", b =>
                {
                    b.HasOne("KnightsApi.Models.Player", null)
                        .WithMany("UserWarriors")
                        .HasForeignKey("PlayerId");

                    b.HasOne("KnightsApi.Models.Player", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KnightsApi.Models.Warrior", "Warrior")
                        .WithMany()
                        .HasForeignKey("WarriorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Warrior");
                });

            modelBuilder.Entity("KnightsApi.Models.Warrior", b =>
                {
                    b.HasOne("KnightsApi.Models.Culture", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("KnightsApi.Models.WarriorResearchRequirement", b =>
                {
                    b.HasOne("KnightsApi.Models.Warrior", "Predecessor")
                        .WithMany()
                        .HasForeignKey("PredecessorWarriorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KnightsApi.Models.Warrior", "Successor")
                        .WithMany("ResearchFrom")
                        .HasForeignKey("SuccessorWarriorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predecessor");

                    b.Navigation("Successor");
                });

            modelBuilder.Entity("KnightsApi.Models.Player", b =>
                {
                    b.Navigation("UserWarriors");
                });

            modelBuilder.Entity("KnightsApi.Models.Warrior", b =>
                {
                    b.Navigation("ResearchFrom");
                });
#pragma warning restore 612, 618
        }
    }
}
